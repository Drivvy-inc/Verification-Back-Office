{"version":3,"sources":["webpack:///./src/app/register-user/register-user.component.html","webpack:///./src/app/core/validators/birthdate.validators.ts","webpack:///./src/app/register-user/register-user.component.css","webpack:///./src/app/register-user/register-user.component.ts","webpack:///./src/app/register-user/register-user.module.ts","webpack:///./src/app/register-user/register-user.routing.ts"],"names":[],"mappings":"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","file":"register-user-register-user-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"user-regisration\\\">\\r\\n  <div class=\\\"p-grid p-nogutter p-justify-center p-align-center\\\" style=\\\"height:100%\\\">\\r\\n    <div class=\\\"p-xl-3 p-lg-6 p-md-8 p-sm-10\\\">\\r\\n      <form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onClickRegisterUser()\\\">\\r\\n        <p-panel header=\\\"User Registration\\\">\\r\\n          <div class=\\\"p-grid p-justify-center p-align-center\\\">\\r\\n            <div class=\\\"p-xl-6 p-lg-6 p-md-8 p-sm-10\\\">\\r\\n              <img src=\\\"../assets/images/logo-large.png\\\" class=\\\"login-logo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"fa fa-user\\\"></i></span>\\r\\n                <input id=\\\"float-input-username\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText formControlName=\\\"name\\\" placeholder=\\\"user name\\\"\\r\\n                  required>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\" *ngIf=\\\"userform.controls['name'].errors && userform.controls['name'].dirty\\\">\\r\\n              <p-message severity=\\\"error\\\" text=\\\"User name is required\\\" *ngIf=\\\"userform.controls['name'].errors['required']\\\"></p-message>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"fa fa-key\\\"></i></span>\\r\\n                <input id=\\\"float-input-password\\\" type=\\\"password\\\" size=\\\"30\\\" pInputText formControlName=\\\"password\\\"\\r\\n                  placeholder=\\\"password\\\" required>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\" *ngIf=\\\"userform.controls['password'].errors && userform.controls['password'].dirty\\\">\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Password is required\\\" *ngIf=\\\"userform.controls['password'].errors['required']\\\"></p-message>\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Minimum 6 characters required.\\\" *ngIf=\\\"userform.controls['password'].errors['minlength'] \\\"></p-message>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\">\\r\\n              <div class=\\\"ui-inputgroup\\\">\\r\\n                <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"fa fa-at\\\"></i></span>\\r\\n                <input id=\\\"float-input-emailid\\\" type=\\\"email\\\" size=\\\"30\\\" pInputText formControlName=\\\"emailId\\\" placeholder=\\\"Email Id\\\"\\r\\n                  required>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\" *ngIf=\\\"userform.controls['emailId'].errors && userform.controls['emailId'].dirty\\\">\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Email is required\\\" *ngIf=\\\"userform.controls['emailId'].errors['required']\\\"></p-message>\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Email is invalid\\\" *ngIf=\\\"userform.controls['emailId'].errors['email']\\\"></p-message>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\">\\r\\n              <p-calendar formControlName=\\\"birthDate\\\" placeholder=\\\"Birth date\\\" [showIcon]=true></p-calendar>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-12\\\" *ngIf=\\\"userform.controls['birthDate'].errors && userform.controls['birthDate'].dirty\\\">\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Birthdate is required\\\" *ngIf=\\\"userform.controls['birthDate'].errors['required']\\\"></p-message>\\r\\n              <p-message severity=\\\"error\\\" text=\\\"Minimum age should be 10 years.\\\" *ngIf=\\\"userform.controls['birthDate'].errors['invalidBirthDate']\\\"></p-message>\\r\\n            </div>\\r\\n          </div>\\r\\n          <p-footer>\\r\\n            <div class=\\\"p-grid\\\">\\r\\n              <div class=\\\"p-col-6\\\">\\r\\n                <button pButton type=\\\"submit\\\" label=\\\"Register\\\" class=\\\"ui-button-raised\\\" [disabled]=\\\"!userform.valid\\\"></button>\\r\\n              </div>\\r\\n              <div class=\\\"p-col-6\\\">\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Login\\\" class=\\\"ui-button-raised\\\" (click)=\\\"onClickGoToLogin()\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </p-footer>\\r\\n        </p-panel>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { AbstractControl } from '@angular/forms';\r\n\r\n/**\r\n * validation function\r\n * birth date should be less than 10 years\r\n * @param control \r\n */\r\nexport function birthDateValidator(control: AbstractControl) {\r\n    var value = control.value;\r\n    var today = new Date();\r\n    var birthDate = new Date(value);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var min = 10;\r\n    if (age > min + 1) {\r\n        return null;\r\n    }\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    var reuslt = age >= min ? null : { 'invalidBirthDate': true };\r\n    return reuslt;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLXVzZXIvcmVnaXN0ZXItdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserDataService } from '../core/services/user-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ToastService } from '../core/services/toast.service';\r\nimport { birthDateValidator } from '../core/validators/birthdate.validators';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.css']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  userform: FormGroup;\r\n\r\n  name: string;\r\n\r\n  emailId: string;\r\n\r\n  password: string;\r\n\r\n  constructor(private userService: UserDataService, private router: Router, private fb: FormBuilder, private toastService: ToastService) { }\r\n\r\n  ngOnInit() {\r\n    this.userform = this.fb.group({\r\n      'name': new FormControl('', Validators.required),\r\n      'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\r\n      'emailId': new FormControl('', [Validators.required, Validators.email]),\r\n      'birthDate': new FormControl('', [Validators.required, birthDateValidator])\r\n    });\r\n  }\r\n\r\n  onClickRegisterUser() {\r\n    let isRegistered: boolean = this.userService.addUser(this.userform.controls[\"name\"].value,\r\n      this.userform.controls[\"password\"].value,\r\n      this.userform.controls[\"emailId\"].value,\r\n      this.userform.controls[\"birthDate\"].value);\r\n    if (isRegistered) {\r\n      this.router.navigate(['/login']);\r\n      this.toastService.addSingle(\"success\", \"\", \"User registered.\")\r\n    }\r\n  }\r\n\r\n  onClickGoToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterUserComponent } from './register-user.component';\r\nimport { RegisterUserRoutingModule } from './register-user.routing';\r\nimport { AppCommonModule } from '../app.common.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegisterUserRoutingModule,\r\n    AppCommonModule\r\n  ],\r\n  declarations: [RegisterUserComponent]\r\n})\r\nexport class RegisterUserModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterUserComponent } from './register-user.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RegisterUserComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RegisterUserRoutingModule { }"],"sourceRoot":""}